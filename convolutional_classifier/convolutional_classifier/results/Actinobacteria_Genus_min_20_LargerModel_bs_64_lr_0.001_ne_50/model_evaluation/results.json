{"lr": 0.001, "n_epoch": 50, "train_loss": 0.0013140612445261652, "valid_loss": 0.03600926794549816, "model_architecture": "DataParallel(\n  (module): LargerModel(\n    (features): Sequential(\n      (0): Conv1d(6, 32, kernel_size=(3,), stride=(1,), padding=(1,))\n      (1): ReLU(inplace=True)\n      (2): Conv1d(32, 64, kernel_size=(3,), stride=(2,), padding=(1,))\n      (3): ReLU(inplace=True)\n      (4): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n      (5): Conv1d(64, 32, kernel_size=(3,), stride=(1,), padding=(1,))\n      (6): ReLU(inplace=True)\n      (7): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n      (8): Conv1d(32, 16, kernel_size=(10,), stride=(1,), padding=(1,))\n      (9): ReLU(inplace=True)\n      (10): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n      (11): Conv1d(16, 8, kernel_size=(5,), stride=(1,), padding=(1,))\n      (12): ReLU(inplace=True)\n      (13): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n    )\n    (classifier): Sequential(\n      (0): Linear(in_features=12472, out_features=2000, bias=True)\n      (1): ReLU(inplace=True)\n      (2): Linear(in_features=2000, out_features=1000, bias=True)\n      (3): ReLU(inplace=True)\n      (4): Linear(in_features=1000, out_features=500, bias=True)\n      (5): ReLU(inplace=True)\n      (6): Linear(in_features=500, out_features=110, bias=True)\n    )\n  )\n)", "batch_size": 64}